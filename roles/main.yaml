---
- name: Check that deployment parameter is available
  fail: 
    msg: "Please use following -e deployment=k8s or deployment=vm"  
  when: deployment is undefined

- name: Copy code to deployment directory
  copy: 
    src='{{ role_path }}/models/'
    dest='{{ role_path }}/deployment/'

- name: Creating instance
  shell: | 
    gcloud compute instances create {{ vm.name }}
    --image-family {{ vm.image_family }}
    --image-project deeplearning-platform-release 
    --zone {{ zone }}
    --boot-disk-auto-delete 
    --boot-disk-size {{ vm.disk_size }}
    --machine-type {{ vm.machine_type }}
    --accelerator {{ vm.accelerator }}
    --tags={{ vm.tag }}
    --subnet default --maintenance-policy TERMINATE --restart-on-failure 
    --preemptible 
    --metadata="install-nvidia-driver=True"
  when: deployment is vm

- name: Copy files to instance
  shell: gcloud compute scp --recurse instance-name:deployment/ {{ role_path }}/deployment/
  when: deployment is vm



    # - name: Check that deployment parameter is available
    #   fail: 
    #     msg: "Please use following -e deployment=k8s or deployment=vm"  
    #   when: deployment is undefined

    # - name: Copy code to deplyment directory
    #   copy: 
    #     src='{{ playbook_dir }}/deployment/models'
    #     dest='{{ playbook_dir }}/../deployment/models/'

    # - name: Create a disk
    #   gcp_compute_disk:
    #       name: disk-instance
    #       size_gb: "{{ vm.disk_size }}"
    #       source_image: "{{ vm.image_family }}"
    #       zone: "{{ zone }}"
    #       project: "{{ gcp_project }}"
    #       auth_kind: "{{ gcp_cred_kind }}"
    #       service_account_file: "{{ gcp_cred_file }}"
    #       scopes:
    #         - https://www.googleapis.com/auth/compute
    #       state: present
    #   register: disk

    # - name: Create a network
    #   gcp_compute_network:
    #     name: network-instance
    #     project: "{{ gcp_project }}"
    #     auth_kind: "{{ gcp_cred_kind }}"
    #     service_account_file: "{{ gcp_cred_file }}"
    #     state: present
    #   register: network
    # 
    # - name: Create an address
    #   gcp_compute_address:
    #     name: address-instance
    #     region: "{{ region }}"
    #     project: "{{ gcp_project }}"
    #     auth_kind: "{{ gcp_cred_kind }}"
    #     service_account_file: "{{ gcp_cred_file }}"
    #     state: present
    #   register: address

    # - name: Create an instance
    #   gcp_compute_instance:
    #     name: "{{ vm.name }}"
    #     machine_type: "{{ vm.machine_type }}"
    #     accelerator: "{{ vm.accelerator }}"

    #     accelerator: "{{ vm.image_project }}"
    #     accelerator: "{{ vm.image_name }}"
    #     disks:
    #     - auto_delete: 'true'
    #       boot: 'true'
    #       source: "{{ disk }}"
    #     metadata:
    #       startup-script: "{{ startup_script_path }}" 
    #     network_interfaces:
    #     - network: "{{ network }}"
    #       access_configs:
    #       - name: External NAT
    #         nat_ip: "{{ address }}"
    #         type: ONE_TO_ONE_NAT
    #     tags: kaggle
    #     zone: "{{ zone }}"
    #     project: "{{ gcp_project }}"
    #     auth_kind: "{{ gcp_cred_kind }}"
    #     service_account_file: "{{ gcp_cred_file }}"
    #     state: present
      
    # - name: Wait for SSH to come up
    #   wait_for: host={{ address.address }} port=22 delay=10 timeout=60