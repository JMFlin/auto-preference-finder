---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb-config
data:
  initdb.sql: |
      CREATE TABLE app_users (user_id VARCHAR(256) PRIMARY KEY, image_id VARCHAR(256), met_insert_time TIMESTAMP);
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
        app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "Always"
#          imagePullPolicy: "IfNotPresent"
#          lifecycle:
#            postStart:
#              exec:
#          command: ["/bin/bash","-c","bash /docker-entrypoint-initdb.d/initdb.sh"]
# # PGPASSWORD=$POSTGRES_PASSWORD psql $POSTGRES_DB -U $POSTGRES_USER -a  -f
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: database-secret-config
                  key: dbname
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: database-secret-config
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secret-config
                  key: password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-pv-claim
            - mountPath: /docker-entrypoint-initdb.d
              name: postgres-initdb
      volumes:
        - name: postgres-pv-claim
          persistentVolumeClaim:
            claimName: postgres-pv-claim
        - name: postgres-initdb
          configMap:
            name: postgres-initdb-config